FORMAT: 1A

# IMP North: Ready

# Introduction

This is a description of rest interfaces ready to be implemented in IMP.
        
# Group Heatmap
This is a group of all rest resources related to heatmap as PNG file. Heat map is a graphical representation of data where the individual values are represented as colors
Currently it is planned to be used to represent two service categories: CarSharing and BikeSharing services

## CarSharing Heatmap [/imp-endpoint/api/V1/Info/Heatmap/CarSharing?date={x}&left_lower_lat={lllat}&left_lower_lng={lllng}&right_upper_lng={rulng}&right_upper_lat={rulat}&providerIds={ids}]    
Get WMS PNG file for carsharing for a specific date, a specific bounding box (place) and for specific free-floating carSharing providers (e.g. 1 flinkster staion car, 2 flinkster free floating car, 3 car2go, etc.)

### Getting heatmap as PNG image [GET]

+ Parameters
    + date (required, string, `1404892800000`) ... a date in the history (later also in the future) Has example value.
    + lllat (required, string, `52.482780222078205`) ... 
    + lllng (required, string, `13.3154296875`) ...     
    + rulng (required, string, `13.359375`) ... 
    + rulat (required, string, `52.50953477032729`) ... 
    + ids (optional, string, `1,3,4`) ... service provider ids, comma-separated list of numbers. If not specified -> returns image for all available providers

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            �PNG

## BikeSharing Heatmap [/imp-endpoint/api/V1/Info/Heatmap/BikeSharing?date={x}&left_lower_lat={lllat}&left_lower_lng={lllng}&right_upper_lng={rulng}&right_upper_lat={rulat}&providerIds={ids}]    
Get WMS PNG file for carsharing for a specific date, a specific bounding box (place) and for specific free-floating bikeSharing providers (NextBike, etc.)

### Getting heatmap as PNG image [GET]

+ Parameters
    + date (required, string, `1404892800000`) ... a date in the history (later also in the future) Has example value.
    + lllat (required, string, `52.482780222078205`) ... 
    + lllng (required, string, `13.3154296875`) ...     
    + rulng (required, string, `13.359375`) ... 
    + rulat (required, string, `52.50953477032729`) ... 
    + ids (optional, string, `1,3,4`) ... service provider ids, comma-separated list of numbers. If not specified -> returns image for all available providers

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            �PNG


# Group Business Area Info

## Business Area Info [/imp-endpoint/api/V1/Info/BusinessArea?operator={operator}]    
Business area of a free-floating service (cars, bikes, more?) specified by operator (or operator id, please see what is better choice)
The data structure of the response contains the following attributes

attribute | json data type | comments
--- | --- | ---
operator | String |  (DriveNow, Car2Go_Berlin, NextBike, CallABike)
description | String |  
businessBoundary | Object | MultyPolygon specified according to the GeoJSON Format Specification: http://geojson.org/geojson-spec.html

### Getting Business Area [GET]

+ Parameters
    + operator (required, string, `Car2Go_Berlin`) ... operator: Car2Go_Berlin, DriveNow, ??? or operatorId?


+ Response 200 (application/json)

    + Body
    
            {
                "operator": "Car2Go_Berlin",
                "description": "if available" 
                "businessBoundary":
                    { 
                        "type": "MultiPolygon",
                        "coordinates": [
                            [[[102.0, 2.0], [103.0, 2.0], [103.0, 3.0], [102.0, 3.0], [102.0, 2.0]]],
                            [[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]],
                            [[100.2, 0.2], [100.8, 0.2], [100.8, 0.8], [100.2, 0.8], [100.2, 0.2]]]
                        ],
                        "crs": {
                            "type": "name",
                            "properties":
                            { "name": "urn:ogc:def:crs:OGC:1.3:CRS84" }
                        }
                    }
                }
            }

