FORMAT: 1A

# IMP North: Ready

# Introduction

This is a description of rest interfaces ready to be implemented in IMP.
        
# Group Heatmap
This is a group of all rest resources related to heatmap as PNG file. Heat map is a graphical representation of data where the individual values are represented as colors
Currently it is planned to be used to represent two service categories: CarSharing and BikeSharing services

## CarSharing Heatmap [/imp-endpoint/api/V1/Info/Heatmap/CarSharing?date={x}&left_lower_lat={lllat}&left_lower_lng={lllng}&right_upper_lng={rulng}&right_upper_lat={rulat}&operatorList={operatorList}]    
Get WMS PNG file for carSharing for a specific date, for a specific bounding box (place) and for specific free-floating carSharing operators (Car2Go_Berlin, DriveNow, etc.)

### Getting heatmap as PNG image [GET]

+ Parameters
    + date (required, string, `1404892800000`) ... a date in the history (later also in the future) Has example value.
    + lllat (required, string, `52.482780222078205`) ... 
    + lllng (required, string, `13.3154296875`) ...     
    + rulng (required, string, `13.359375`) ... 
    + rulat (required, string, `52.50953477032729`) ... 
    + operatorList (optional, string, `Car2Go_Berlin,DriveNow`) ... comma-separated list of CarSharing operator ids. If not specified -> returns image for all available _CarSharing_ operators

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            �PNG

## BikeSharing Heatmap [/imp-endpoint/api/V1/Info/Heatmap/BikeSharing?date={x}&left_lower_lat={lllat}&left_lower_lng={lllng}&right_upper_lng={rulng}&right_upper_lat={rulat}&operatorList={operatorList}]    
Get WMS PNG file for carsharing for a specific date, a specific bounding box (place) and for specific free-floating bikeSharing providers (NextBike, etc.)

### Getting heatmap as PNG image [GET]

+ Parameters
    + date (required, string, `1404892800000`) ... a date in the history (later also in the future) Has example value.
    + lllat (required, string, `52.482780222078205`) ... 
    + lllng (required, string, `13.3154296875`) ...     
    + rulng (required, string, `13.359375`) ... 
    + rulat (required, string, `52.50953477032729`) ... 
    + operatorList (optional, string, `NextBike,CallABike`) comma-separated list of BikeSharing operator ids. If not specified -> returns image for all available _BikeSharing_ operators

+ Request

    + Headers
        
            accept: image/png 

+ Response 200 (image/png)

    + Body
    
            �PNG


# Group Business Area Info

## Business Area Info [/imp-endpoint/api/V1/Info/ServiceOffering/{id}/BusinessArea]    
Business area of a (free-floating) service (cars, bikes) specified by service offering id.

The data structure contains the following attributes:

Attribute | JSON Data Type | Comments
--- | --- | ---
operator | String |  operator id. Example values: Car2Go_Berlin, DriveNow, NextBike, CallABike etc
description | String |  ...
serviceCategory |ENUM | IMP service categories "CarSharing", "BikeSharing", etc
businessBoundary | Object | business area specified as MultyPolygon conform to the following GeoJSON Format Specification: http://geojson.org/geojson-spec.html

### Getting Business Area [GET]


+ Response 200 (application/json)

    + Body
            
            {
              "operator": "Car2Go_Berlin",
              "description": "Wagen zum Gehen ",
              "serviceCategory": "CarSharing",
              "businessBoundary": {
                "disjunctedBoundary": {
                  "type": "MultiPolygon",
                  "coordinates": [
                  [[[52.53996,12.977235],[52.540586,12.977782],[52.541037,12.977782],[52.541905,12.977793],[52.541924,12.978501],[52.541885,12.978995]],
                      [[52.550631,13.29696],[52.550729,13.297985],[52.55021,13.298113],[52.550135,13.297314],[52.550178,13.297051],[52.550631,13.29696]]]
                      ],
                  "crs": {
                    "type": "name",
                    "properties": {
                      "name": "WGS84"
                    }
                  }
                },
                "negatedBoundary": {
                  "type": "MultiPolygon",
                  "coordinates": [
                  [[[52.476409,13.366665],[52.476377,13.366386],[52.475619,13.366161],[52.475256,13.366123],[52.475158,13.366236],[52.475164,13.366413],[52.475275,13.366488],[52.476409,13.366665]],
                      [[52.530452,13.314314],[52.530347,13.313885],[52.535359,13.312082],[52.537317,13.326759],[52.536821,13.327746]]]
                      ],
                  "crs": {
                    "type": "name",
                    "properties": {
                      "name": "WGS84"
                    }
                  }
                }
              }
            }


# Group Parking
This is a group of all parking related rest resources. Parking Garages & On-street Paring Vacancies

## On-street Parking Vacancies with Basic Info [/imp-endpoint/api/V1/Resources/Parking/OnStreetVacancies?lat={lat}&lng={lng}&radius={radius}?size={size}&unit={unit}]    
This collection contains a list of all on-street vacansies in an area of interest specified by query parameters together with an URI to acquire more details about a specific vacancy. 
Note: The area of interest can be defined as:

* a bounding circle (lat={lat}&lng={lng}&radius={radius})
* a bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The If-Modified-Since (optional) can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date time in HTTP date format for e.g. Wed, 09 Apr 2008 23:55:38 GMT

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | (="OnStreetParkingVacancy") ?
uri | URI | URI to request more details
location | Object | Standard WGS 84 for polar coordinates { "latitude":Number, "longitude":Number, "system": ENUM{"WGS_84","GK4","ETRS89",...}  } 
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parkhaus", "Parkzone", "Tiefgarage", "Parkplatz"} 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Sinceodified-Since header is passed in the request 

Parts of the data structure might be omitted if the information is not available. 
    
### Getting on-street parking vacancies [GET]
@nottestable

+ Parameters
    + lat (string, `52.52`) ... String `lat` latitude value. Has example value.
    + lng (string, `13.39`) ... String `lng` longitude value. Has example value.
    + radius (string, `1000`) ... String `radius` radius value. Has example value.
    + size (string, `2.5`) ... String `size` required size value (car size). Has example value.
    + unit (string, `m`) ... String `unit` measurement unit for the size value. Has example value.
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "city2.e??",
                    "lastUpdateTime": "2014-07-10T11:11:04+0200",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/270113/Process?action=consume"
                        }
                    ],
                    "id": 270113,
                    "description": "Mitte, Parkhaus Dorotheenstraße",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/270113",
                    "location": {
                        "latitude": 52.51908,
                        "longitude": 13.39094,
                        "system": "WGS_84"
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "Parkinglot",
                    "totalnumber": {
                        "others": 495,
                        "handicappedOnly": 0,
                        "womenOnly": 0
                    },
                    "lottype": "Tiefgarage"
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/270134/Process?action=consume"
                        }
                    ],
                    "id": 270134,
                    "description": "Mitte, An der Friedrichswerderschen Kirche",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/270134",
                    "location": {
                        "latitude": 52.515930000000004,
                        "longitude": 13.39694,
                        "system": "WGS_84"
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "Parkinglot",
                    "totalnumber": {
                        "others": 75,
                        "handicappedOnly": 0,
                        "womenOnly": 0
                    },
                    "lottype": "Parkplatz"
                }
            ]
        }
